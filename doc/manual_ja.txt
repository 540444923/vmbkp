-------------------------------------------------------------------------------
Vmbkp マニュアル
version r20101014

--------------------------------------------------------------------------------
目次
--------------------------------------------------------------------------------
* これは何？
* 動作環境
* 必要なツールとライブラリ
* ビルド
* 簡単インストール
* コマンドラインインターフェース
* 簡単な使い方
* ログ
* 多重起動について
* 設定ファイル
* アーカイブの管理
* バックアップの挙動
* その他注意点

--------------------------------------------------------------------------------
これは何？
--------------------------------------------------------------------------------
Vmbkp: Online Bakup Tool for VMware vSphere
VMware vSphere 環境の Virtual Machine をバックアップ/レストアするツール。

* オンライン:
    VM 起動中でもバックアップ可能。
    
* 多世代対応:
    full/differential/incremental バックアップ対応。
    
* 高速/効率的:
    アーカイブアクセスは全てシーケンシャル。
    バックアップストレージが HDD でも高速動作。
    逆差分による最新世代フルアーカイブの保持。
    gzip 圧縮機能。
    
* 便利:
    コマンドラインインターフェース。
    グルーピング機能でまとめてバックアップ。

--------------------------------------------------------------------------------
動作環境
--------------------------------------------------------------------------------
* Linux kernel 2.6.18 以上が動く amd64 サーバ。
  VM でも良いが、バックアップ対象の vCenter/ESXi が
  管理する VM をバックアップサーバとすると SAN 転送が使えないので注意。
  CentOS 5.5 amd64 で動作確認済み。

* VMware vSphere 4 以上が対象。
  Essential License の vCenter server で動作確認済み。
  無償の ESXi は使用できない(snapshot 取得に失敗)。
  
* vSphere で管理しているストレージが /dev/sdX としてアクセスできる SAN 環境
  (SAN 転送を有効にする場合。使えなくても NBD モードで動く)。
  open-iscsi initiator でログインしていれば使える。
  バックアップだけならデバイスの read 権限があれば良い。
  (disk group に加えれば OK。)


--------------------------------------------------------------------------------
必要なツールとライブラリ
--------------------------------------------------------------------------------
* Java コード
  * Java SE 6 以上が必要。
    詳細は vmbkp/Makefile 参照。

  * VI-Java 2.1GA 以上が必要。
    http://vijava.sourceforge.net/
    BSD ライセンスのため、本配布に含まれる。

  * doxygen, GNU global
    API ドキュメント作成が必要な場合。

* C++ コード
  * vmdkbkp/README 参照。

  
--------------------------------------------------------------------------------
ビルド
--------------------------------------------------------------------------------
Java コードのビルドは vmbkp/README 参照。
C++ コードのビルドは vmdkbkp/README 参照。

--------------------------------------------------------------------------------
簡単インストール
--------------------------------------------------------------------------------
1. VDDK をインストール。
2. source code を展開。
3. source tree 直下の install.sh をバックアップ先ディレクトリを指定して実行。
4. vmbkp_global.conf 内の vsphere セクション内を環境に合わせて編集。
5. ./vmbkp --help を実行。


--------------------------------------------------------------------------------
コマンドラインインターフェース
--------------------------------------------------------------------------------
> ./vmbkp [COMMAND] [OPTION(S)] [TARGET(s)]

コマンドリスト
update, backup, restore, status, check, destroy, clean, list.
--help コマンド出力メッセージ参照。

TARGETはスペースなどの文字を含む VM 名やデータストア名を
指定する場合はダブルクオートで括る。
([a-zA-Z0-9-_]+ なら ダブルクオートは必要ない。)

TARGET の指定は、
1. Moref (vSphere 内でユニーク。)
2. VM の名前
3. グループ名 (vmbkp_group.conf で設定可能)


--------------------------------------------------------------------------------
簡単な使い方
--------------------------------------------------------------------------------
全 VM のバックアップ。
  > ./vmbkp update; ./vmbkp backup all

特定 VM のバックアップ。
  > ./vmbkp update; ./vmbkp backup VM_NAME

ARCHIVE_VM の最新バックアップ世代を NEW_VM_NAME という名前でレストア。
  > ./vmbkp restore ARCHIVE_VM --name NEW_VM_NAME

アーカイブ状態の表示。
  > ./vmbkp status --detail all
  
失敗したバックアップなどのゴミファイルを除去。
  > ./vmbkp clean

VM のアーカイブを削除。
  > ./vmbkp clean --all ARCHIVE_VM

アーカイブチェック。
  > ./vmbkp check ARCHIVE_VM


--------------------------------------------------------------------------------
ログ
--------------------------------------------------------------------------------
実行時ディレクトリに vmbkp.log というファイル名で作られる。
既に同名ファイルが存在している場合は、追記される。

backup 時の vmdkbkp (C++) のログは、各世代アーカイブディレクトリに保存される。

restore 時の vmdkbkp (C++) のログは、バックアップ元のアーカイブディレクトリに
保存される。


--------------------------------------------------------------------------------
多重起動について
--------------------------------------------------------------------------------
同じ backup_directory を対象にした多重起動に対応。
ただし、ログ出力が混ざるので注意。

平行して実行できるコマンド。
* update は同時に 1 つしか出来ない。
* 同じ VM のバックアップは同時に 1 つしか出来ないが、
  異なる VM であれば平行バックアップ可能。
  ただし、ストレージが共有されていると、
  SCSI reservation conflict を起こす可能性大なので避けるのが賢明。
* レストアは対象アーカイブの VM がバックアップ中でなければ可能。
* status はバックアップやレストアと同時実行可能。
  ただし、バックアップやレストア中の VM は見えない。
* check は backup/restore と排他的。


--------------------------------------------------------------------------------
設定ファイル
--------------------------------------------------------------------------------
Global config
--conf で指定。必須。
サンプル: repository/vmbkp/conf/vmbkp_global.conf

Group config
--grpconf で指定。必須ではない。
サンプル: repository/vmbkp/conf/vmbkp_group.conf


--------------------------------------------------------------------------------
アーカイブの管理
--------------------------------------------------------------------------------

* archive_directory (以下、ARC_DIR)に全て格納される。

ARC_DIR/vmbkp_allvm.profile
  * 全 VM の name と moref、vSphere 上に存在しているかどうかを記録。
    全てのコマンドが参照する。update コマンドで更新される。

ARC_DIR/<vm-moref>/
  * 各 vm のアーカイブが保存される。
    vm name ではなく、vm moref が用いられる。
    name と moref の対応は status コマンドで確認できる。
  * file vmbkp_vm.profile
    各 vm のアーカイブの管理情報が格納されるファイル。
    ユーザが直接編集する必要はない。
    テキストファイルなので閲覧は可能。

ARC_DIR/<vm-moref>/<generation-id>/
  * 各世代のアーカイブが保持される。
  * file vmbkp_generation.profile
    各世代のアーカイブの管理情報が格納されるファイル。
  * <snapshot-moref>.ovf
    ovf ファイル。ディスク以外の vm 構成情報を記録。
  * vmdk アーカイブファイル diskId は世代毎で別の可能性がある。
    ディスクの同一性は UUID で担保。
    * <diskId>.dump: vmdk のフルイメージ。
    * <diskId>.digest: vmdk の 整合性検証用データ。
    * <diskId>.rdiff: vmdk の逆差分イメージ。diff/incr モード時のみ記録。
    * <diskId>.bmp: 変更ブロックビットマップ情報。incr モード時のみ記録。
    * <diskId>.log, <diskId>.err: vmdkbkp コマンドのログ。

profile の仕様については
サンプルファイルとテストコードを参照。

* 1 つの archive_directory に対して 1 つの vCenter/ESX(i) の
  VM アーカイブを保持できる。

* 複数の vCenter を管理したければ、archive_directory を別にし、
  それぞれ、Global config を用意する。

  
--------------------------------------------------------------------------------
バックアップの挙動
--------------------------------------------------------------------------------
full/diff/incr モードは自動的に判別される。

バックアップ共通操作
  * 最新 generation-id をインクリメントして新たに世代ディレクトリを作成。
  * VM 情報取得。
  * VM スナップショット取得。
  * スナップショット情報取得。
  * ovf export。
  * 各 vmdk 毎に vmdkbkp を呼びだしてアーカイブ保存。
    [full/diff/dump で挙動が異なる]
  * スナップショット削除。
  * 管理情報ファイルを更新。

full モードの挙動
  * incr も diff も無理な場合、full モードで動作する。
  * vmdk の全ブロックを取得、dump/digest ファイルに保存。

diff モードの挙動
  * incr モードが無理で、かつ、過去にバックアップが成功した
    世代が存在すれば、diff モードで動作する。
  * vmdk の全ブロックを取得、過去最新世代の dump/digest と比較して、
    ブロックが変更されていれば、逆差分 rdiff を出力。
    同時に dump/digest を出力。

incr モードの挙動
  * バックアップが成功した過去の最新世代において、
    対応する vmdk の changeId が有効で、
    今回取得した情報でも changeId が有効であれば、incr モードで動作する。
  * 更新ブロック情報 (<diskId>.bmp ファイル) を vSphere から取得
  * 更新ブロック情報を元に、更新されたブロックのみ vmdk から取得。
    逆差分 rdiff を出力。同時に、dump/digest 出力。

バックアップ失敗後の挙動
  * 次回のバックアップ時は、それまでに成功した最新世代を起点とした
    diff/incr バックアップを試みる (ない場合は full)。

    
--------------------------------------------------------------------------------
その他 注意点
--------------------------------------------------------------------------------
* 多言語の扱い
  * ASCII コードの VM 名のみサポート。
    内部の configuration file parser が UTF-8 対応していない。
  * LANG UTF8 (ja_JP.UTF-8) に設定していれば、日本語の含まれる VM の
    * バックアップは可能。ただし、名前ではなく vm-moref を指定。
    * --name で日本語を指定してレストアすることは可能。
  * LANG=C のときは、
    * vm-moref を指定してのバックアップは可能。
      ただし、VM 名が ???? になってしまう。
    * レストアも可能。ただし、VM 名のうち日本語の部分は ???? になる。

* テンプレートには未対応。
  現在の実装ではバックアップされない。

* vSphere でのインベントリでのフォルダ構造は記録/復元されない。
  レストア時は デフォルトディレクトリにレストアされる。

* レストア時の SAN 転送は未サポート。
  SAN 転送時に発生する block allocate が、
  Thin vmdk だと失敗。
  Thick vmdk だと、block 毎に soap server と通信するため速度があまりにも遅い。
  効率的に block を allocate する手段が現在ないため、NBD でレストアする。
  部品のコードは存在するため、将来効率的な block allocate 手段が提供されれば
  SAN 経由の restore を作ることは可能だと考えられる。
  
* 独立型ディスクはスキップしてバックアップする。
  VDDK がアクセスに失敗するため。
  アーカイブに含まれないため、レストアもされない。

--------------------------------------------------------------------------------
